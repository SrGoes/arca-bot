// Configura√ß√µes do Sistema de Sorteio - Arca Bot
export const RaffleConfig = {
    // === CONFIGURA√á√ïES B√ÅSICAS ===
    // Multiplicador para pre√ßo progressivo dos tickets
    priceMultiplier: 1.1,
    
    // Valor m√≠nimo para o primeiro ticket
    minFirstTicketPrice: 1,
    
    // Valor m√°ximo para o primeiro ticket
    maxFirstTicketPrice: 10000,
    
    // N√∫mero m√°ximo de tickets por usu√°rio (0 = ilimitado)
    maxTicketsPerUser: 50,
    
    // N√∫mero m√°ximo de participantes no sorteio (0 = ilimitado)
    maxParticipants: 100,
    
    // === PERMISS√ïES ===
    // Roles que podem criar sorteios (deixe vazio para permitir qualquer admin)
    allowedRoles: [] as string[],
    
    // === INTERFACE ===
    // Cores dos embeds
    colors: {
        active: 0x00FF7F,      // Verde para sorteio ativo
        ended: 0xFFD700,       // Dourado para sorteio finalizado
        cancelled: 0xFF6B6B,   // Vermelho para sorteio cancelado
        admin: 0x4169E1,       // Azul para painel admin
        finished: 0xFFD700     // Dourado para sorteio finalizado com vencedor
    },
    
    // Emojis utilizados
    emojis: {
        ticket: "üé´",
        prize: "üèÜ",
        participants: "üë•",
        creator: "üëë",
        time: "‚è∞",
        money: "üí∞"
    }
};

// Fun√ß√£o para calcular o pre√ßo do pr√≥ximo ticket
export function calculateTicketPrice(firstTicketPrice: number, currentTicketCount: number): number {
    if (currentTicketCount === 0) return firstTicketPrice;
    return Math.round(firstTicketPrice * Math.pow(RaffleConfig.priceMultiplier, currentTicketCount));
}

// Fun√ß√£o para calcular pre√ßo total de uma quantidade de tickets
export function calculateTotalPrice(firstTicketPrice: number, currentTickets: number, newTickets: number): number {
    let total = 0;
    for (let i = 0; i < newTickets; i++) {
        total += calculateTicketPrice(firstTicketPrice, currentTickets + i);
    }
    return total;
}
